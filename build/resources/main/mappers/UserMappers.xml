<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.doodle.mapper.UserMapper">

    <select id="getHelloById" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT username from users where userid = #{userid}
    </select>
    <!-- 회원가입  -->
    <insert id="createUser">
        INSERT INTO users VALUES(#{username},#{nickname},#{email},#{userid},#{userpw})
    </insert>

    <select id="getUserById" parameterType="java.lang.String" resultType="com.example.doodle.dto.UserDTO">
        SELECT * from users
        WHERE USERID = #{userid}
    </select>

    <select id="getUserByNickname" parameterType="java.lang.String" resultType="com.example.doodle.dto.UserDTO">
        SELECT * from users
        WHERE nickname = #{nickname}
    </select>

    <select id="findAll" resultType="java.util.HashMap">
        SELECT * FROM users
    </select>

    <select id="loginCheck" resultType="String">
        SELECT username
        FROM users
        WHERE userid=#{userid} AND userpw=#{userpw}
    </select>

    <!-- 아이디 찾기 -->
    <select id="findId" parameterType="String" resultType="String">
        select userid from users
        where email = #{email}
    </select>

    <!-- 아이디 유효성 체크 -->
    <select id="findIdCheck" resultType="int">
        select count(*) from users where email = #{email}
    </select>

    <!-- 임시 비밀번호 발급 -->
    <update id="findPw" >
        update users
        set userpw=#{userpw}
        where email = #{email} and userid=#{userid}
    </update>

    <!-- 비밀번호 유효성 체크 -->
    <select id="findPwCheck" resultType="int">
        select count(*) from users
        where email = #{email} and userid=#{userid}
    </select>

    <!-- 회원 탈퇴 -->
    <delete id="deleteUser" parameterType="string">
        delete from users
        where userid = #{userid}
    </delete>

<!--아이디에 대응하는 비번 찾기-->
    <select id="getUserpw" resultType="string">
        select userpw from users where userid=#{userid}
    </select>

    <select id="getProfileById" parameterType="com.example.doodle.dto.UserDTO" resultType="com.example.doodle.dto.UserDTO">
        select *
        from users
        where userid = #{userid}
    </select>

    <update id="editUserProfile">
        update users
        set username = #{username}, nickname = #{nickname}, email = #{email}, userpw = #{userpw}
        where userid = #{userid}
    </update>
</mapper>